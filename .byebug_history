exit
stock.match((?![A-Z]))
stock
exit
stocks
stock
exit
stocks
exit
stocks.next
stocks
exit
stocks
stocks << stock
stocks
stock
oversold_ticker
exit
oversold_ticker
stock
exit
oversold_ticker
z
   end 
    byebug
         z.css('a')[0].attributes["href"].value
oversold_Listings.each do |z|
        end
         z.css('a')[0].attributes["href"].value
oversold_Listings.each do |z|
z.css('a')[0].attributes["href"].value
 z.css('a')[0].attributes["href"].value
z
stock
stocks
stock
oversold_Listings
z
        }
            ticker:  oversold_ticker.css('a')[0].attributes["href"].value
        stock =  { 
oversold_Listings.each do |oversold_ticker|
    end
        }
            ticker:  oversold_ticker.css('a')[0].attributes["href"].value
oversold_Listings.each do |oversold_ticker|  stock =  { 
        stock =>  { ticker:  oversold_ticker.css('a')[0].attributes["href"].value
    end
        }
        stock =>  { ticker:  oversold_ticker.css('a')[0].attributes["href"].value
oversold_Listings.each do |oversold_ticker|
  oversold_Listings.each do |oversold_ticker|
oversold_Listings
scraper
    end
          stocks << stock
        }
        stock =>  { ticker:  oversold_ticker.css('a')[0].attributes["href"].value
  oversold_Listings.each do |oversold_ticker|
stock
stocks
scraper
stock
stocks
stock
scraper
exit
stock
stocks
oversoldListings.count
oversoldListings.stock
oversoldListings
oversold
stock
stocks
oversoldListings
oversold
oversoldListings
url
stocks
stock
exit
scraper
oversoldListings
oversoldListing
stocks
stock
stocks
oversoldList.css('a')[0].attributes["href"].value
oversoldList.css('a')[0].attributes["href"].value.next
oversoldList.css('a')[0].attributes["href"].value
stocks
stock
stocks
oversoldList
  end
        stocks << stock_ticker
        }
        stock.stock_ticker =  { ticker: oversoldList.css('a')[0].attributes["href"].value
oversoldList.each do |stock|
        }
        stock.stock_ticker =  { ticker: oversoldList.css('a')[0].attributes["href"].value
oversoldList.each do |stock|
stock
stocks
stock.stock_ticker
stock_ticker
stocks
stock
oversoldList.css('a')[0].attributes["href"].value
oversoldList.css('a.tv-screener_symbol.href')
oversoldList.css('a.tv-screener_symbol.href').text
oversoldList.css('href').text
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container').first
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container').a
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container').css('a.tv-screener__symbol apply-common-tooltip')
oversoldList.css('a.tv-screener__symbol.href')
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container')
oversoldList.css('a.tv-screener__symbol.href')
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container').first
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container')
parsed_page.each do |stock|
parsed_page
stocks
exit
exot
first.css('a')[1].attributes["href"].value
first.css('a')[0].attributes["href"].value
first.css('a')[0].attributes['name']
first.css('a')[0].attributes['name'].value
first.css('a')[0]
first.css('a')[0]'
first.css('a')[0].attributes["name"].value
first.css('a')[0].attributes["href"].value
first.css('a')[0].attrubutes["href"].value
first.css('a')[0]attrubutes["href"].value
first
first = oversoldList.first
1 = oversoldList.first
oversoldList.first('a').text
oversoldList.first
oversoldList.css('a.tv-screener__symbol.href')
oversoldList.css('a.tv-screener__symbol.value')
oversoldList.css('a.tv-screener__symbol')
oversoldList.css('a.tv-screener__symbol apply-common-tooltip')
oversoldList
oversoldList = parsed_page.css('div.tv-screener-table__symbol-container')
parsed_page.css('div.tv-screener-table__symbol-container').count
parsed_page.css('div.tv-screener-table__symbol-container')
parsed_page.css('div.tv-screener-table_symbol-container')
parsed_page.css('div.tv-screener-table')
parsed_page.css('div.tv-screener__symbol apply-common-tooltip')
parsed_page.css('div.tv-screener__symbol')
scraper.css
stock.css
stock.cs
first_stock.css = tv-screener__symbol
parsed_page
url
exit
ruby scraper.rb
stock_arr
stock
stock_arr
stock.name
row.values
row.value
row.name
rows
row.tr
row.name
row
